Napier: 4/26/2021

- Goals: Mote Intervals - 100pps, new binning mode 5 (delay binning)

- Experiment:  Joey C, Mender

- Recording Start Time: 10:30 am
- Recording Stop Time:  1:00 pm

- xPC Model: Rig_main_Cortical_SBP_Spikes_motePackets13
- Recorded Array: Motor (Patient Cable)
- Data recorded: Spikes (250Hz highpass, RMS -4.5) + 2kSps 300-1000HzBPas continuous
- Drink: Apple Juice

- Params: 
	* Movement Mask: [0,1,0,1,0]
	* Target Hold Time (OL/CL): 750/500 online
	* Target Scaling(OL/CL): 90/100
	* Juice Time: 100
	* Trial Timeout: 10000
	* Auto Juice: 0
   	* Target Pos Style (OL/CL): 34
	* Visualization Style: MRS

-Decoders: 
	(final 3 numbers are threshNum,avgMode,intLagMs)
	KF0: TrainOnline_Cortical_KalmanFilter_Multi_MoteIntervals('Joker','',5,false,[2,4],32,0,good_chans_SBP,good_chans_SBP,1,{'act_thresh',1},true, 1,5,0);
		Mote KF correlation = 0.69617
		Mote KF lag = 4
		SBP KF correlation = 0.7153
		SBP KF lag = 4
	
	KF1: TrainOnline_Cortical_KalmanFilter_Multi_MoteIntervals('Joker','',5,false,[2,4],32,0,good_chans_SBP,good_chans_SBP,1,{'act_thresh',1},true, 1,5,0);
		Mote KF correlation = 0.69617
		Mote KF lag = 4
		SBP KF correlation = 0.7153
		SBP KF lag = 4
		
	KF2: TrainOnline_Cortical_KalmanFilter_Multi_MoteIntervals('Joker','',10,false,[2,4],32,0,good_chans_SBP,good_chans_SBP,1,{'act_thresh',1},true, 1,5,0);
		Mote KF correlation = 0.73032
		Mote KF lag = 4
		SBP KF correlation = 0.7278
		SBP KF lag = 4
		
	KF3: TrainOnline_Cortical_KalmanFilter_Multi_MoteIntervals('Joker','',16,false,[2,4],32,0,good_chans_SBP,good_chans_SBP,1,{'act_thresh',1},true, 1,5,0);
		Mote KF correlation = 0.69737
		Mote KF lag = 4
		Loading previous Z Struct...
		SBP KF correlation = 0.69817
		SBP KF lag = 4

-Runs:
	Run 1-3: calibration
	Run 4: threshold setting. 120 trials
	xpcMoteThresholds = calcOnlineMoteThresholds(100,'Joker');
	xpcMoteBinDelayms = 20;
	
100pps
	Run 5: TS-34 training. 400 trials. BR=3.85
	Run 6: KF0 100pps 32ms bins - 100 SBP BR=1.6. mint decode not working - either 0 or 1, no in-between
	xpcBinLag was [3,3]
	
	Run 7: KF0 - bin mode 4 works fine - so something wrong with circ buff
	*** the model takes the bin sum of interval values, but the train func (formatZContinuousMoteIntervals) takes the bin mean. train func updated
	Run 8: KF1 - working now. (Was on mode 4 with lag for this run)
	
	xpcBinLag = [0, 0];
	Run 9: KF1 mode5 100pps 32ms bins - 100 SBP BR=2.0. 100 mint BR=2.0. 100 sbp BR=1.65. 100 Mint BR=1.8. Both having hard time with idx-extend/mrp-flex split
	
40pps
	xpcMoteThresholds = calcOnlineMoteThresholds(40,'Joker');
	xpcMoteBinDelayms = 35;
	xpcBinLag = [0, 0];
	Run 10: TS-34 training. 400 trials. BR=3.5
	Run 11: KF2 40pps 32ms bins - 100 SBP BR=1.7. old decoder loaded (**this was actually KF1)
	Run 12: KF2 but lag was wrong.
	Run 13: KF2 40pps 32ms bins - 20 sbp then crash
	Run 14: KF2 40pps 32ms bins - 90 SBP BR=1.5.  Success rate 84%. Having trouble with idx-extend splits, can't seem to get finger apart.
	Run 15: KF2 40pps 32ms bins - 10mint, similar to sbp. Stopped it since decoder was just bad
	Run 16: TS-34 training. 400 trials. BR=3.5
	Run 17: KF3 40pps 32ms bins - 100 SBP BR=2.1. 100 mint BR=1.35. 100 sbp BR=1.9. 100 Mint BR=1.2. Much better decoder now. A lot less stable with Mint. Mint having more trouble with split targets. Mint is definitely not as good, but could seem a lot worse since he's could be tired (2.5hrs in).
	Run 18: KF3 with xpcMoteBinDelayms = 20. Faster feedback but more error (still bad)
	Run 19: KF3 with xpcMoteBinDelayms = 50 - a lot more stable! ***35ms delay probably wasn't enough***
	
-Notes:
	good_chans_SBP = [1:9,11,13,15,17,23,24,33,35,37:40,43,45:47,49:53,55:60,62,64,65,67:69,71:76,78:88,90:92,95,96];
	
	targets near the ends of the range tend to be a lot harder than those in the middle
	The difficulty with splits (idx ext) might partly be because he's not very strong/fast does idx-ext in hand control.
	

	For reference: RF0: TrainOnline_Cortical_KalmanFilterReFIT_Multi_MoteIntervals('Joker','',17,17,0,[2,4],32,xpcBinLag,xpcA,xpcW,good_chans_SBP,good_chans_SBP, 1, {[], []}, true, 1,5,0);